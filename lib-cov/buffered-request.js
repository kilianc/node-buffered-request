/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['buffered-request.js']) {
  _$jscoverage['buffered-request.js'] = [];
  _$jscoverage['buffered-request.js'][1] = 0;
  _$jscoverage['buffered-request.js'][2] = 0;
  _$jscoverage['buffered-request.js'][3] = 0;
  _$jscoverage['buffered-request.js'][4] = 0;
  _$jscoverage['buffered-request.js'][5] = 0;
  _$jscoverage['buffered-request.js'][6] = 0;
  _$jscoverage['buffered-request.js'][7] = 0;
  _$jscoverage['buffered-request.js'][8] = 0;
  _$jscoverage['buffered-request.js'][9] = 0;
  _$jscoverage['buffered-request.js'][11] = 0;
  _$jscoverage['buffered-request.js'][12] = 0;
  _$jscoverage['buffered-request.js'][13] = 0;
  _$jscoverage['buffered-request.js'][14] = 0;
  _$jscoverage['buffered-request.js'][15] = 0;
  _$jscoverage['buffered-request.js'][17] = 0;
  _$jscoverage['buffered-request.js'][21] = 0;
  _$jscoverage['buffered-request.js'][22] = 0;
  _$jscoverage['buffered-request.js'][23] = 0;
  _$jscoverage['buffered-request.js'][24] = 0;
  _$jscoverage['buffered-request.js'][25] = 0;
  _$jscoverage['buffered-request.js'][26] = 0;
  _$jscoverage['buffered-request.js'][27] = 0;
  _$jscoverage['buffered-request.js'][30] = 0;
  _$jscoverage['buffered-request.js'][31] = 0;
  _$jscoverage['buffered-request.js'][33] = 0;
  _$jscoverage['buffered-request.js'][36] = 0;
  _$jscoverage['buffered-request.js'][37] = 0;
  _$jscoverage['buffered-request.js'][38] = 0;
  _$jscoverage['buffered-request.js'][39] = 0;
  _$jscoverage['buffered-request.js'][40] = 0;
  _$jscoverage['buffered-request.js'][41] = 0;
  _$jscoverage['buffered-request.js'][44] = 0;
  _$jscoverage['buffered-request.js'][45] = 0;
  _$jscoverage['buffered-request.js'][49] = 0;
}
_$jscoverage['buffered-request.js'][1]++;
require("http").IncomingMessage.prototype.makeBuffered = (function () {
  _$jscoverage['buffered-request.js'][2]++;
  var self = this;
  _$jscoverage['buffered-request.js'][3]++;
  var unluckyChunks = [];
  _$jscoverage['buffered-request.js'][4]++;
  var isPaused = false;
  _$jscoverage['buffered-request.js'][5]++;
  var isEnded = false;
  _$jscoverage['buffered-request.js'][6]++;
  var originalResume = self.resume;
  _$jscoverage['buffered-request.js'][7]++;
  var originalPause = self.pause;
  _$jscoverage['buffered-request.js'][8]++;
  var originalEmit = self.emit;
  _$jscoverage['buffered-request.js'][9]++;
  var currentEmit = originalEmit;
  _$jscoverage['buffered-request.js'][11]++;
  function patchedEmit(eventName, chunk) {
    _$jscoverage['buffered-request.js'][12]++;
    if (eventName === "data") {
      _$jscoverage['buffered-request.js'][13]++;
      unluckyChunks.push(chunk);
    }
    else {
      _$jscoverage['buffered-request.js'][14]++;
      if (eventName === "end") {
        _$jscoverage['buffered-request.js'][15]++;
        isEnded = true;
      }
      else {
        _$jscoverage['buffered-request.js'][17]++;
        originalEmit.apply(self, arguments);
      }
    }
}
  _$jscoverage['buffered-request.js'][21]++;
  self.resume = (function () {
  _$jscoverage['buffered-request.js'][22]++;
  if (! isPaused) {
    _$jscoverage['buffered-request.js'][22]++;
    return;
  }
  _$jscoverage['buffered-request.js'][23]++;
  isPaused = false;
  _$jscoverage['buffered-request.js'][24]++;
  currentEmit = originalEmit;
  _$jscoverage['buffered-request.js'][25]++;
  if (unluckyChunks.length) {
    _$jscoverage['buffered-request.js'][26]++;
    unluckyChunks.forEach((function (chunk) {
  _$jscoverage['buffered-request.js'][27]++;
  self.emit("data", chunk);
}));
  }
  _$jscoverage['buffered-request.js'][30]++;
  if (isEnded) {
    _$jscoverage['buffered-request.js'][31]++;
    self.emit("end");
  }
  _$jscoverage['buffered-request.js'][33]++;
  originalResume.apply(this, arguments);
});
  _$jscoverage['buffered-request.js'][36]++;
  self.pause = (function () {
  _$jscoverage['buffered-request.js'][37]++;
  if (isPaused) {
    _$jscoverage['buffered-request.js'][37]++;
    return;
  }
  _$jscoverage['buffered-request.js'][38]++;
  isPaused = true;
  _$jscoverage['buffered-request.js'][39]++;
  unluckyChunks = [];
  _$jscoverage['buffered-request.js'][40]++;
  currentEmit = patchedEmit;
  _$jscoverage['buffered-request.js'][41]++;
  originalPause.apply(this, arguments);
});
  _$jscoverage['buffered-request.js'][44]++;
  self.emit = (function () {
  _$jscoverage['buffered-request.js'][45]++;
  currentEmit.apply(this, arguments);
});
});
_$jscoverage['buffered-request.js'][49]++;
module.exports.version = require("../package").version;
_$jscoverage['buffered-request.js'].source = ["require('http').IncomingMessage.prototype.makeBuffered = function () {","  var self = this","  var unluckyChunks = []","  var isPaused = false","  var isEnded = false","  var originalResume = self.resume","  var originalPause = self.pause","  var originalEmit = self.emit","  var currentEmit = originalEmit","","  function patchedEmit(eventName, chunk) {","    if (eventName === 'data') {","      unluckyChunks.push(chunk)","    } else if (eventName === 'end') {","      isEnded = true","    } else {","      originalEmit.apply(self, arguments)","    }","  }","","  self.resume = function () {","    if (!isPaused) return","    isPaused = false","    currentEmit = originalEmit","    if (unluckyChunks.length) {","      unluckyChunks.forEach(function (chunk) {","        self.emit('data', chunk)","      })","    }","    if (isEnded) {","      self.emit('end')","    }","    originalResume.apply(this, arguments)","  }","","  self.pause = function () {","    if (isPaused) return","    isPaused = true","    unluckyChunks = []","    currentEmit = patchedEmit","    originalPause.apply(this, arguments)","  }","","  self.emit = function () {","    currentEmit.apply(this, arguments)","  }","}","","module.exports.version = require('../package').version"];
